# If not running interactively, don't do anything
[[ $- != *i* ]] && return


# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth


# append to the history file, don't overwrite it
shopt -s histappend


# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000


if [ -f ~/.sh_aliases ]; then
    source ~/.sh_aliases
fi

# User specific environment
if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]; then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

if [ -f /etc/profile.d/bash_completion.sh ]; then
    source /etc/profile.d/bash_completion.sh;
fi

# User specific aliases and functions
if [ -d ~/.bashrc.d ]; then
    for rc in ~/.bashrc.d/*; do
        if [ -f "$rc" ]; then
            . "$rc"
        fi
    done
fi




# env Exports
export EDITOR=nvim
export TERMINAL=myterm
export WLR_NO_HARDWARE_CURSORS=1


## NNN  Configuration
export NNN_PLUG='D:mkdir.sh;x:extract.sh;d:trash.sh'
export NNN_TMPFILE=/tmp/.lastd

# Prompt
PS1='[\[\033[01;32m\]\u\[\033[00m\]@\[\033[00;31m\]\h\[\033[00m\]]:\[\033[01;34m\]\w\[\033[00m\] > '


## Extract files

extract()
{
    case $1 in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $1;;
        *.tar.gz|*.tgz) tar xzvf $1;;
        *.tar.xz|*.txz) tar xJvf $1;;
        *.zip) unzip $1;;
        *.rar) unrar x $1;;
        *.7z) 7z x $1;;
    esac
}


## Open files in a GUI program

open()
{
    echo "Program (GUI): ";
    read prog;
    nohup $prog $1 >/dev/null 2>&1 &
}

## nf with cd 
nfcd ()
{
    nnn -d;
    $(cat $NNN_TMPFILE | sed -E "s/'|\"//g")
    rm $NNN_TMPFILE
}

revert ()
{
    commit=$(git log --oneline | fzf | awk '{print $1}');
    echo $commit;
}


## devicerc
if [ -f $HOME/.devicerc ]; then
    source $HOME/.devicerc
fi
